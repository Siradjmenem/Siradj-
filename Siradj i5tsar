import requests
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
import json
import os

# ูุถุน ุงูุชููู ุงูุฎุงุต ุจุงูุจูุช ูAPI Key ููููุน shrtfly
TELEGRAM_TOKEN = '6594222678:AAFfBZsQ5gR1LJ-JgE1L3ogCf0YiAxw8hUw'
SHORTENER_API_KEY = 'b3366121f53c71fd1ecbd12fa72a2511'
SHORTENER_API_URL = 'https://shrtfly.com/api'

# ููู ูุชุฎุฒูู ุจูุงูุงุช ุงููุณุชุฎุฏููู
USERS_DATA_FILE = 'users_data.json'

# ุฏุงูุฉ ููุฑุงุกุฉ ุงูุจูุงูุงุช ูู ููู
def load_user_data():
    if os.path.exists(USERS_DATA_FILE):
        with open(USERS_DATA_FILE, 'r') as f:
            return json.load(f)
    return {}

# ุฏุงูุฉ ูุญูุธ ุงูุจูุงูุงุช ุฅูู ููู
def save_user_data(data):
    with open(USERS_DATA_FILE, 'w') as f:
        json.dump(data, f)

# ุฏุงูุฉ ูุงุฎุชุตุงุฑ ุงูุฑุงุจุท ุจุงุณุชุฎุฏุงู shrtfly
def shorten_link(long_url):
    params = {
        'api': SHORTENER_API_KEY,
        'url': long_url
    }
    try:
        response = requests.get(SHORTENER_API_URL, params=params)
        if response.status_code == 200:
            result = response.json()
            if result.get('status') == 'success':
                shortened_url = result['result'].get('shorten_url')
                return shortened_url
        return None
    except Exception as e:
        print(f"ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุงุชุตุงู ุจู shrtfly: {e}")
        return None

# ุฏุงูุฉ ููุนุงูุฌุฉ ุงูุฃูุฑ /start
def start(update, context):
    keyboard = [
        [InlineKeyboardButton("ุฑุงุจุท ุงูุฅุญุงูุฉ", callback_data="get_referral_link")],
        [InlineKeyboardButton("ุฅุญุตุงุฆุงุฆูุงุชู", callback_data="stats")],
        [InlineKeyboardButton("ุณุญุจ ุงูุฃุฑุจุงุญ", callback_data="withdraw")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    message = (
        "ูุฑุญุจูุง ุจู ูู ุจูุช ุงุฎุชุตุงุฑ ุงูุฑูุงุจุท!\n\n"
        "ูุฐุง ุงูุจูุช ูุณูุญ ูู ุจุงุฎุชุตุงุฑ ุงูุฑูุงุจุท ููุดุงุฑูุชูุง. ุนูุฏูุง ูููู ุงูุฃุดุฎุงุต ุจุงุณุชุฎุฏุงู ุฑุงุจุทู ุงููุฎุชุตุฑุ "
        "ุณุชุญุตู ุนูู ููุงูุขุช ููุงุจู ูู ุฅุญุงูุฉ.\n\n"
        "๐ฐ **ููููุฉ ุงูุฑุจุญ**: ููููู ุฑุจุญ ุงููุงู ูู ุฎูุงู ุงุฎุชุตุงุฑ ุงูุฑูุงุจุท. "
        "ูููุง ุฒุงุฏ ุนุฏุฏ ุงูุฃุดุฎุงุต ุงูุฐูู ูุงููุง ุจุงุณุชุฎุฏุงู ุฑุงุจุทูุ ูููุง ุฒุงุฏุช ุฃุฑุจุงุญู.\n\n"
        "๐ **ุฑุงุจุท ุงูุฅุญุงูุฉ**: ุงุณุชุฎุฏู ุฑุงุจุท ุงูุฅุญุงูุฉ ุงูุฎุงุต ุจู ูุฒูุงุฏุฉ ุนุฏุฏ ุงูุฅุญุงูุงุช ูุฌูู ุงูุฃุฑุจุงุญ.\n\n"
        "ูุฑุคูุฉ ุฅุญุตุงุฆูุงุชู ูุจุฏุฃ ุงูุฑุจุญุ ุงุถุบุท ุนูู ุงูุฃุฒุฑุงุฑ ุฃุฏูุงู."
    )
    
    update.message.reply_text(message, reply_markup=reply_markup)

# ุฏุงูุฉ ููุนุงูุฌุฉ ุงูุฅุญุตุงุฆูุงุช
def stats(update, context):
    query = update.callback_query
    user_id = str(query.from_user.id)
    
    user_data = load_user_data()
    if user_id in user_data:
        ref_count = user_data[user_id].get('referrals', 0)
        earnings = ref_count * 0.1  # ุงูุชุฑุถ ุฃู ูู ุฅุญุงูุฉ ุชุนุทู 0.1 ุฏููุงุฑ
        impressions = user_data[user_id].get('impressions', 0)
        earnings_from_impressions = impressions * 0.003  # 0.003 ุฏููุงุฑ ููู ุธููุฑ
        total_earnings = earnings + earnings_from_impressions
        query.edit_message_text(f"ุนุฏุฏ ุงูุฅุญุงูุงุช: {ref_count}\nุนุฏุฏ ุงูุธููุฑ: {impressions}\nุงูุฃุฑุจุงุญ ูู ุงูุฅุญุงูุงุช: {earnings} ุฏููุงุฑ\nุงูุฃุฑุจุงุญ ูู ุงูุธููุฑ: {earnings_from_impressions} ุฏููุงุฑ\nุงููุฌููุน: {total_earnings} ุฏููุงุฑ\n\nููุงุณุชูุฑุงุฑุ ููููู ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ ุนุจุฑ /rotor")
    else:
        query.edit_message_text("ูู ุชูู ุจุฃู ุฅุญุงูุฉ ุจุนุฏ.\n\nููุงุณุชูุฑุงุฑุ ููููู ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ ุนุจุฑ /rotor")

# ุฏุงูุฉ ููุฑุฏ ุนูู ุงูุฑุณุงุฆู ูุฅุถุงูุฉ ุงูุฅุญุงูุงุช
def handle_message(update, context):
    user_message = update.message.text
    user_id = str(update.message.from_user.id)
    user_data = load_user_data()
    
    # ุงูุชุฃูุฏ ูู ุฃู ุงูุฑุณุงูุฉ ูู ุฑุงุจุท ุตุงูุญ
    if user_message.startswith("http://") or user_message.startswith("https://"):
        shortened_link = shorten_link(user_message)
        
        if shortened_link:
            update.message.reply_text(f"ูุฐุง ูู ุงูุฑุงุจุท ุงููุฎุชุตุฑ: {shortened_link}")
            
            # ุฅุถุงูุฉ ุงูุฅุญุงูุฉ ูููุณุชุฎุฏู
            if user_id not in user_data:
                user_data[user_id] = {'referrals': 0, 'earnings': 0, 'impressions': 0}
            
            # ุงุฑุณุงู ุฑุงุจุท ุงูุฅุญุงูุฉ
            referral_link = f"{shortened_link}?ref={user_id}"
            update.message.reply_text(f"ุงุณุชุฎุฏู ูุฐุง ุงูุฑุงุจุท ููุฅุญุงูุฉ: {referral_link}")
            
            # ุฒูุงุฏุฉ ุนุฏุฏ ุงูุธููุฑ (ุงูุชุฑุถ 1000 ุธููุฑ ููู ุฑุงุจุท ูุฎุชุตุฑ ูุชู ุชูุตูุฑู)
            user_data[user_id]['impressions'] += 1000  # ูู ุฑุงุจุท ูุฎุชุตุฑ ูุนุงุฏู 1000 ุธููุฑ ุงูุชุฑุงุถููุง
            
            save_user_data(user_data)
        else:
            update.message.reply_text("ุนุฐุฑูุงุ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงุฎุชุตุงุฑ ุงูุฑุงุจุท.")
    else:
        update.message.reply_text("ุงูุฑุฌุงุก ุฅุฑุณุงู ุฑุงุจุท ุตุงูุญ ููููุงู ุจุงุฎุชุตุงุฑู.")

# ุฏุงูุฉ ููุฑุฏ ุนูู ุงูุฅุญุตุงุฆูุงุช ุนุจุฑ ุงูุฒุฑ
def button(update, context):
    query = update.callback_query
    query.answer()

    if query.data == "get_referral_link":
        query.edit_message_text(text="ุงูุฑุฌุงุก ุฅุฑุณุงู ุงูุฑุงุจุท ุงูุฐู ุชุฑูุฏ ุงุฎุชุตุงุฑู.")
    elif query.data == "stats":
        stats(update, context)
    elif query.data == "withdraw":
        withdraw(update, context)

# ุฏุงูุฉ ููุณุญุจ
def withdraw(update, context):
    user_data = load_user_data()
    user_id = str(update.callback_query.from_user.id)
    
    if user_id in user_data:
        earnings = user_data[user_id].get('earnings', 0)
        if earnings >= 1:  # ุชุญุฏูุฏ ุงูุญุฏ ุงูุฃุฏูู ููุณุญุจ (ูุซูุงู 1 ุฏููุงุฑ)
            # ุฅุฑุณุงู ุทูุจ ุณุญุจ (ููุง ูููู ุฃู ุชุชู ุฅุถุงูุฉ ูุธุงุฆู ูุซู ุงูุฏูุน ุฃู ุงูุชุญูููุงุช)
            user_data[user_id]['earnings'] = 0  # ุฅุนุงุฏุฉ ุชุนููู ุงูุฃุฑุจุงุญ ุจุนุฏ ุงูุณุญุจ
            save_user_data(user_data)
            update.callback_query.edit_message_text(f"ุชู ุณุญุจ {earnings} ุฏููุงุฑ ุจูุฌุงุญ.\n\nููุงุณุชูุฑุงุฑุ ููููู ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ ุนุจุฑ /rotor")
        else:
            update.callback_query.edit_message_text(
                "ุนุฐุฑูุงุ ุงูุญุฏ ุงูุฃุฏูู ููุณุญุจ ูู 1 ุฏููุงุฑ. "
                "ูุฑุฌู ุฌูุน ุงููุฒูุฏ ูู ุงูุฃุฑุจุงุญ ูุจู ุงูุณุญุจ.\n\nููุงุณุชูุฑุงุฑุ ููููู ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ ุนุจุฑ /rotor"
            )
    else:
        update.callback_query.edit_message_text("ููุณ ูุฏูู ุฃุฑุจุงุญ ุจุนุฏ ููุณุญุจ.\n\nููุงุณุชูุฑุงุฑุ ููููู ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ ุนุจุฑ /rotor")

# ุฏุงูุฉ ูุฑุฌูุน ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ ุนุจุฑ /rotor
def rotor(update, context):
    start(update, context)

# ุฅุนุฏุงุฏ ุงูุจูุช
def main():
    updater = Updater(TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher

    # ุฅุถุงูุฉ ูุนุงูุฌ ููุฃูุฑ /start
    dp.add_handler(CommandHandler("start", start))
    
    # ุฅุถุงูุฉ ูุนุงูุฌ ููุฃูุฑ /rotor ููุฑุฌูุน ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ
    dp.add_handler(CommandHandler("rotor", rotor))

    # ุฅุถุงูุฉ ูุนุงูุฌ ููุฃูุฑ /stats ูุนุฑุถ ุงูุฅุญุตุงุฆูุงุช
    dp.add_handler(CommandHandler("stats", stats))

    # ุฅุถุงูุฉ ูุนุงูุฌ ููุณุญุจ
    dp.add_handler(CommandHandler("withdraw", withdraw))

    # ุงูุชุนุงูู ูุน ุงูุฑุณุงุฆู
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    # ุงูุชุนุงูู ูุน ุงูุฅุญุตุงุฆูุงุช ุนุจุฑ ุงูุฃุฒุฑุงุฑ
    dp.add_handler(CallbackQueryHandler(button))

    # ุจุฏุก ุชุดุบูู ุงูุจูุช
    print("ุงูุจูุช ููุฏ ุงูุชุดุบูู...")
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
